import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { trpc } from "../../../utils/trpc";
import { signIn, signOut, useSession } from "next-auth/react";
import { useEffect, useState } from "react";

const HomeContents = () => {
	const [inputUrl, setInputUrl] = useState("");
	const [notes, setNotes] = useState("");
	const { data: session, status } = useSession();
	const router = useRouter();
	let { userId } = router.query as { userId: string };
	if (userId === "me") {
		if (!session?.user?.id) router.push("/login");
		else userId = session?.user?.id;
	}
	const { data: chain } = trpc.useQuery(["example.getChain", { userId }]);

	const ctx = trpc.useContext();
	const { mutate: addToChain } = trpc.useMutation("question.addToChain", {
		onSuccess: () => ctx.invalidateQueries("example.getChain"),
	});
	const addUrl = () => {
		addToChain({ url: inputUrl, notes });
	};

	if (status === "loading") return <div>Loading...</div>;

	return (
		<div className="h-screen bg-blue-300">
			Hello {session?.user?.name}
			{session && (
				<>
					<button onClick={() => signOut()}>Sign Out</button>
					<div style={{ display: "flex", flexDirection: "row", gap: "10px" }}>
						<input
							type="text"
							placeholder="url"
							id="url"
							value={inputUrl}
							onChange={(e) => setInputUrl(e.target.value)}
						></input>
						<input
							type="text"
							placeholder="notes"
							id="notes"
							value={notes}
							onChange={(e) => setNotes(e.target.value)}
						></input>
						<button onClick={addUrl}>Add Url</button>
					</div>
				</>
			)}
			{chain?.map((link) => {
				return (
					<p
						style={{ border: "1px solid black", margin: "5px", width: "400px" }}
						key={link.id}
					>
						id: {link.id}
						<br />
						url: {link.url}
						<br />
						notes: {link.notes}
						<br />
						userId: {link.userId}
					</p>
				);
			})}
		</div>
	);
};

const Home: NextPage = () => {
	return (
		<>
			<Head>
				<title>ChainLinkk</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<HomeContents />
		</>
	);
};

export default Home;
